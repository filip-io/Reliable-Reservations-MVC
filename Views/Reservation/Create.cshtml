@model Reliable_Reservations_MVC.Models.Reservation.ReservationCreateViewModel

@{
    ViewData["Title"] = "Make a Reservation";
}

<h2>Make a Reservation</h2>

<form asp-action="Create" method="post">
<div class="form-group">
    <label for="reservationDate">Select Date</label>
    <input type="date" id="reservationDate" class="form-control" />
</div>

<div class="form-group">
    <label for="numberOfGuests">Number of Guests</label>
    <input type="number" id="numberOfGuests" class="form-control" min="1" max="8" />
</div>

<div class="form-group">
    <label for="availableTimeSlots">Available Time Slots</label>
    <select id="availableTimeSlots" class="form-control">
        <option value="">Please select a date and number of guests...</option>
    </select>
</div>

<div class="form-group">
    <button type="submit" class="btn btn-primary" id="reserveButton" disabled>Make Reservation</button>
</div>
</form>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#reservationDate, #numberOfGuests').on('change', function () {
                var date = $('#reservationDate').val();
                var numberOfGuests = $('#numberOfGuests').val();

                if (date && numberOfGuests) {
                    // Fetch all reservations for the selected date
                    $.ajax({
                        url: '@Url.Action("GetReservationsForDate", "Reservation")',
                        data: { date: date },
                        success: function (data) {
                            var $timeSlots = $('#availableTimeSlots');
                            $timeSlots.empty();

                            var availableTimes = getAvailableTimeSlotsForDate(data, numberOfGuests);

                            if (availableTimes && availableTimes.length > 0) {
                                $timeSlots.append('<option value="">Select a time slot</option>');
                                availableTimes.forEach(function (time) {
                                    $timeSlots.append('<option value="' + time.value + '">' + time.display + '</option>');
                                });
                                $('#reserveButton').prop('disabled', false);
                            } else {
                                $timeSlots.append('<option value="">No available time slots for the selected date</option>');
                                $('#reserveButton').prop('disabled', true);
                            }
                        },
                        error: function () {
                            $('#availableTimeSlots').empty().append('<option value="">Failed to load available time slots.</option>');
                            $('#reserveButton').prop('disabled', true);
                        }
                    });
                }
            });

            function getAvailableTimeSlotsForDate(reservations, numberOfGuests) {
                // List of all possible times (e.g., every half-hour)
                var allTimes = generateAllPossibleTimeSlots();
                var bookedTimes = [];

                // Loop through reservations and gather booked time slots
                reservations.forEach(function (reservation) {
                    reservation.timeSlots.forEach(function (slot) {
                        bookedTimes.push({
                            startTime: new Date(slot.startTime), // Convert to Date
                            endTime: new Date(slot.endTime)      // Convert to Date
                        });
                    });
                });

                // Filter out booked times
                var availableTimes = allTimes.filter(function (time) {
                    return !bookedTimes.some(function (booked) {
                        // Check for time overlap
                        return (
                            (time.startTime < booked.endTime && time.endTime > booked.startTime)
                        );
                    });
                });

                return availableTimes;
            }

            function generateAllPossibleTimeSlots() {
                var timeSlots = [];
                var startTime = moment("10:00", "HH:mm"); // Example start time
                var endTime = moment("23:00", "HH:mm"); // Example end time

                while (startTime < endTime) {
                    timeSlots.push({
                        value: startTime.format("HH:mm"),
                        display: startTime.format("h:mm A"),
                        startTime: startTime.clone().toDate(), // Ensure it’s a Date object
                        endTime: startTime.clone().add(30, 'minutes').toDate() // Ensure it’s a Date object
                    });
                    startTime.add(30, 'minutes');
                }

                return timeSlots;
            }
        });
    </script>
}